version: '3.8'

services:
  mysql-db:
    container_name: mysql-db
    image: mysql:8.0 latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_ROOT_PASSWORD}  #(cf .env)
    ports:
      - "${DB_PORT}:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - ecommerce-network

  redis-cache:
    container_name: redis-cache
    image: redis:alpine latest
    restart: always
    environment:
      command: redis-server --requirepass ${REDIS_PASSWORD} #REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:6379"
    
    networks:
      - ecommerce-network
    depends_on:
      - mysql-db
  

  common-data-service:
    container_name: common-data-service  
    build:
      context: ./server/common-data-service
      dockerfile: Dockerfile
    
    environment:
      - SPRING_PROFILES_ACTIVE=${ACTIVE_PROFILE}
      - PORT=${COMMON_DATA_SERVICE_PORT}:9000  # From .env  PORT=9000
      - "DB_HOST: ${DB_HOST}"
      - "DB_PORT: ${DB_PORT}"
      - "DB_SCHEMA: ${DB_SCHEMA}"
      - "DB_USER: ${DB_USER}"
      - "DB_PASS: ${DB_PASS}"
      - "REDIS_PASSWORD:  ${REDIS_PASSWORD}"
      - "REDIS_PORT: ${REDIS_PORT}"
    ports:  
      - "${COMMON_DATA_SERVICE_PORT}:${COMMON_DATA_SERVICE_PORT}"  # Maps external port 9000 to internal 8080
    depends_on:
      - mysql-db
      - redis-cache
      - react-ui
    networks:
      - ecommerce-network
    restart: always  
      

  authentication-service:
    container_name: authentication-service  
    build: 
      context: ./server/authentication-service
      dockerfile: Dockerfile
    
    environment:
      - SPRING_PROFILES_ACTIVE=${ACTIVE_PROFILE}
      - PORT=${AUTHENTICATION_SERVICE_PORT}:7000  # From .env PORT=7000
      - "DB_HOST: ${DB_HOST}"
      - "DB_PORT: ${DB_PORT}"
      - "DB_SCHEMA: ${DB_SCHEMA}"
      - "DB_USER: ${DB_USER}"
      - "DB_PASS: ${DB_PASS}"
      - "REDIS_PASSWORD:  ${REDIS_PASSWORD}"
      - "REDIS_PORT: ${REDIS_PORT}"
    ports:
      - "${AUTHENTICATION_SERVICE_PORT}:${AUTHENTICATION_SERVICE_PORT}" # Maps external port 7000 to internal 8080
    depends_on:
      - mysql-db
      - redis-cache
      - react-ui
    networks:
      - ecommerce-network

  search-suggestion-service:
    build:
      context: ./server/search-suggestion-service
      dockerfile: Dockerfile
    container_name: search-suggestion-service   
    environment:
      - "ACTIVE_PROFILE: ${ACTIVE_PROFILE}"
      - "PORT=${SEARCH_SUGGESTION_SERVICE_PORT}:10000"  # From .env  PORT=10000
      - "DB_HOST: ${DB_HOST}"
      - "DB_PORT: ${DB_PORT}"
      - "DB_SCHEMA: ${DB_SCHEMA}"
      - "DB_USER: ${DB_USER}"
      - "DB_PASS: ${DB_PASS}"
    ports:
      - "${SEARCH_SUGGESTION_SERVICE_PORT}:${SEARCH_SUGGESTION_SERVICE_PORT}"  # Maps external port 100000 to internal 8080
    depends_on:
      - redis-cache
    networks:
      - ecommerce-network
    restart: always  


  payment-service:
    build: 
      context: ./server/payment-service
      dockerfile: Dockerfile
    environment:
      - "SPRING_PROFILES_ACTIVE: ${ACTIVE_PROFILE}"
      - "PORT=${PAYMENT_SERVICE_PORT}:9050"  # From .env PORT=9050
      - "DB_HOST: ${DB_HOST}"
      - "DB_PORT: ${DB_PORT}"
      - "DB_SCHEMA: ${DB_SCHEMA}"
      - "DB_USER: ${DB_USER}"
      - "DB_PASS: ${DB_PASS}"
    ports:
      - "${PAYMENT_SERVICE_PORT}:${PAYMENT_SERVICE_PORT}"   # Maps external port 9095 to internal 8080
    depends_on:
      - mysql-db
    networks:
      - ecommerce-network
    restart: always  

  react-ui:
    build: 
      context: ./client
      dockerfile: Dockerfile
    container_name: react-ui-service   

    ports:
      - "${REACT_APP_PORT}:${REACT_APP_PORT}:3000"  # Maps external port 3000 to internal 3000
    environment:
      - REACT_CLIENT_URL= ${REACT_CLIENT_URL}
      - REACT_APP_ENVIRONMENT=${REACT_APP_ENVIRONMENT}
      - REACT_APP_AUTHENTICATION_SERVICE_PORT=${REACT_APP_AUTHENTICATION_SERVICE_PORT}
      - REACT_APP_COMMON_DATA_SERVICE_PORT=${REACT_APP_COMMON_DATA_SERVICE_PORT}
      - REACT_APP_SEARCH_SUGGESTION_SERVICE_PORT=${REACT_APP_SEARCH_SUGGESTION_SERVICE_PORT}
      - REACT_APP_AUTHENTICATION_SERVICE_URL=${REACT_APP_AUTHENTICATION_SERVICE_URL}
      - REACT_APP_COMMON_DATA_SERVICE_URL=${REACT_APP_COMMON_DATA_SERVICE_URL}
      - REACT_APP_SEARCH_SUGGESTION_SERVICE_URL=${REACT_APP_SEARCH_SUGGESTION_SERVICE_URL}
  
    depends_on:
      - common-data-service
      - authentication-service
      - search-suggestion-service
    networks:
      - ecommerce-network
    restart: always  

networks:
  ecommerce-network:
      driver: bridge

volumes:
  mysql-data: